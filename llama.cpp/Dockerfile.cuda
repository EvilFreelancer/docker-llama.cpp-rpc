FROM nvidia/cuda:12.5.1-devel-ubuntu22.04 AS builder
WORKDIR /app

ARG LLAMACPP_REPO="https://github.com/ggerganov/llama.cpp.git"
# It may be name of branch, tag or commit hash
ARG LLAMACPP_VERSION="master"

# To get latest tag use this:
# git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' \
#    "https://github.com/ggerganov/llama.cpp.git" 'b*' | \
#    tail --lines=1 | cut --delimiter='/' --fields=3
# For details see here: https://stackoverflow.com/questions/8932389/git-shallow-clone-to-specific-tag)

# Install dependencies
RUN set -xe \
 && apt update -q \
 && apt install -fyq bash wget git make cmake g++ \
 && apt clean

# Clone repo
RUN set -xe \
 && git clone --branch "$LLAMACPP_VERSION" --depth 1 "$LLAMACPP_REPO"

# Build binaries
WORKDIR /app/llama.cpp/build-rpc
RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1
RUN set -xe \
 && export LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs/:$LD_LIBRARY_PATH \
 && cmake .. -DGGML_CUDA=ON -DGGML_RPC=ON \
 && MAKEFLAGS=-j$(nproc) cmake --build . --config Release



FROM nvidia/cuda:12.5.1-runtime-ubuntu22.04
WORKDIR /app

# Install basic dependencies
RUN set -xe \
 && apt update -q \
 && apt install -fyq bash wget libgomp1 \
 && apt clean

# Create folders
RUN set -xe \
 && mkdir -pv /app/models

# Copy compiled tools
COPY --from=builder /app/llama.cpp/build-rpc/src/libllama.so /usr/lib/x86_64-linux-gnu
COPY --from=builder /app/llama.cpp/build-rpc/ggml/src/libggml.so /usr/lib/x86_64-linux-gnu
COPY --from=builder /app/llama.cpp/build-rpc/bin/rpc-server .
COPY --from=builder /app/llama.cpp/build-rpc/bin/llama-cli .
COPY --from=builder /app/llama.cpp/build-rpc/bin/llama-server .

# Init entrypoint
ADD entrypoint.sh .
ENTRYPOINT ["/app/entrypoint.sh"]
