name: Check for new releases, build and push containers
on:
  schedule:
    - cron: '0 0 * * *' # every day at midnight

jobs:
  compare_tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install curl and jq
        run: sudo apt-get install curl jq

      - name: Get Docker Hub tags
        id: docker_hub_tags
        run: |
          url="https://registry.hub.docker.com/v2/repositories/${owner}/${repo}/tags/"
          result=$(curl -s "$url" | jq '."results"[]["name"]' | grep -v "latest" | grep -v "cuda")
          sorted_result=$(echo "$result" | sed 's/\"//g' | sort -V | tr '\n' ',')
          echo "::set-output name=result::$sorted_result"
        env:
          owner: evilfreelancer
          repo: llama.cpp-rpc

      - name: Get GitHub Releases
        id: github_releases
        run: |
          url="https://api.github.com/repos/${owner}/${repo}/releases"
          result=$(curl -s "$url" | jq '.[]["name"]' | grep '^b*')
          sorted_result=$(echo "$result" | sed 's/\"//g' | sort -V | tail -n 2 | tr '\n' ',')
          echo "::set-output name=result::$sorted_result"
        env:
          owner: ggerganov
          repo: llama.cpp

      - name: Compare tags
        run: |
          docker_hub_tags="${{ steps.docker_hub_tags.outputs.result }}"
          github_releases="${{ steps.github_releases.outputs.result }}"

          IFS=',' read -r -a docker_hub_tags_array <<< "$docker_hub_tags"
          IFS=',' read -r -a github_releases_array <<< "$github_releases"

          docker buildx create --name my_builder --driver=docker-container

          for tag in "${github_releases_array[@]}"; do
            if [[ ! " ${docker_hub_tags_array[*]} " =~ " $tag " ]]; then
              echo "Missing tag: $tag"
              docker buildx build --builder=my_builder --push --platform=linux/amd64,linux/arm64,linux/arm/v7 --build-arg LLAMACPP_VERSION=${tag} --tag=evilfreelancer/llama.cpp-rpc:${tag} ./llama.cpp/
              docker buildx build --builder=my_builder --push --platform=linux/amd64 --file ./llama.cpp/Dockerfile.cuda --build-arg LLAMACPP_VERSION=${tag} --tag=evilfreelancer/llama.cpp-rpc:${tag}-cuda ./llama.cpp/
            fi
          done
